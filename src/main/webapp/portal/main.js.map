{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.modue.ts","webpack:///./src/app/hotel-list/hotel-list.component.html","webpack:///./src/app/hotel-list/hotel-list.component.scss","webpack:///./src/app/hotel-list/hotel-list.component.ts","webpack:///./src/app/hotel/hotel.component.html","webpack:///./src/app/hotel/hotel.component.scss","webpack:///./src/app/hotel/hotel.component.ts","webpack:///./src/app/loader/spinner/spinner.component.html","webpack:///./src/app/loader/spinner/spinner.component.scss","webpack:///./src/app/loader/spinner/spinner.component.ts","webpack:///./src/app/providers/constant.service.ts","webpack:///./src/app/providers/loader-service.service.ts","webpack:///./src/app/providers/request.service.ts","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.scss","webpack:///./src/app/review/review.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"app-background\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \".app-background {\\n  width: 100%;\\n  position: absolute; }\\n\\n.app-header {\\n  height: 15%;\\n  width: 100%; }\\n\"","import { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { Constants } from \"./providers/constant.service\"\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor(private router: Router) {\n    this.router.navigate([Constants.HotelList]);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from \"@angular/http\";\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule, components } from './app.routing.modue';\nimport { Constants } from \"./providers/constant.service\";\nimport { RequestService } from \"./providers/request.service\";\nimport { LoaderService } from \"./providers/loader-service.service\";\nimport { SpinnerComponent } from './loader/spinner/spinner.component'\n// import { HotelListComponent } from './hotel-list/hotel-list.component';\n// import { HotelComponent } from './hotel/hotel.component';\n// import { ReviewComponent } from './review/review.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    components,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule\n  ],\n  providers: [\n    Constants,\n    RequestService,\n    LoaderService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from \"@angular/core\"\r\nimport { Routes, RouterModule } from \"@angular/router\"\r\nimport { HotelComponent } from \"src/app/hotel/hotel.component\"\r\nimport { HotelListComponent } from \"src/app/hotel-list/hotel-list.component\"\r\nimport { ReviewComponent } from \"src/app/review/review.component\"\r\nimport { Constants } from \"src/app/providers/constant.service\";\r\nconst routes: Routes = [\r\n    { path: Constants.HotelList, component: HotelListComponent },\r\n    { path: Constants.Hotel, component: HotelComponent },\r\n    { path: Constants.Review, component: ReviewComponent }\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports:[RouterModule]\r\n})\r\nexport class AppRoutingModule{\r\n}\r\nexport const components = [HotelListComponent, HotelComponent, ReviewComponent];","module.exports = \"<div class=\\\"main\\\">\\n    <div class=\\\"header\\\" align=center>\\n    Epsilon Hotel Booking\\n    </div>\\n    <div class=\\\"body\\\" *ngIf=\\\"!loading\\\" >\\n        <div *ngIf=\\\"!hotel_list\\\" class=\\\"middle row\\\">\\n            <div style=\\\"color: red;margin: 30% 20% 30% 30%;\\\"> Something wrong has happened</div>\\n        </div>\\n        <div *ngFor=\\\"let hotel of hotel_list\\\" class=\\\"middle row\\\" (click)=\\\"shoeHotelDetail(hotel)\\\">\\n           <div class=\\\"inner col-xs-2\\\">{{country_codes[hotel.country]}} <br> {{hotel.city}}</div> \\n           <div class=\\\"inner col-xs-4 center\\\">\\n              {{hotel.name}}\\n           </div>\\n           <div class=\\\"inner col-xs-4\\\" >\\n              <img src=\\\"../assets/icon/Chevron_simple_button_teal.svg\\\" />\\n           </div> \\n        </div>\\n    </div>\\n    <div class=\\\"loader\\\" *ngIf=\\\"loading\\\" >\\n        <img src=\\\"../assets/icon/loader.gif\\\" />\\n    </div>\\n    <div class=\\\"footer\\\" align=center>\\n        Epsilon Hotel Booking\\n    </div>\\n</div>\"","module.exports = \".main {\\n  background: #f9f9f9;\\n  height: 100%; }\\n  .main .header {\\n    height: 3rem;\\n    position: fixed;\\n    top: 0;\\n    width: 100%;\\n    background: white;\\n    padding-top: 0.5rem;\\n    font-size: 2rem;\\n    line-height: 2.9rem; }\\n  .main .body {\\n    height: 70%;\\n    width: 100%;\\n    margin-bottom: 3rem;\\n    margin-top: 3rem; }\\n  .main .loader {\\n    height: 70%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    text-align: center;\\n    margin-top: 10rem;\\n    background: white; }\\n  .main .footer {\\n    height: 3rem;\\n    bottom: 0;\\n    position: fixed;\\n    background: white;\\n    width: 100%;\\n    padding-top: 0.5rem;\\n    font-size: 2rem;\\n    line-height: 2.9rem; }\\n  div.inner {\\n  display: table-cell;\\n  margin: 1% 0rem 1% 0rem;\\n  border-bottom: 1px solid #000;\\n  padding: 1rem 0 1rem 0; }\\n  div.inner img {\\n    padding-top: 1rem;\\n    margin-right: 0.5rem; }\\n  div.body {\\n  display: table; }\\n  div.middle {\\n  display: table-row; }\\n\"","import { Component ,  OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { RequestService } from \"../providers/request.service\"\nimport { Constants } from \"../providers/constant.service\"\nimport { LoaderService } from \"../providers/loader-service.service\"\ndeclare var window: IWindow;\ninterface IWindow extends Window {\n  HotelListComponentRef;\n}\n@Component({\n  selector: 'app-hotel-list',\n  templateUrl: './hotel-list.component.html',\n  styleUrls: ['./hotel-list.component.scss']\n})\nexport class HotelListComponent implements OnInit {\n  private hotel_list: any;\n  private loading = true;\n  private country_codes: any;\n  constructor(\n              private requestService: RequestService,\n              private router: Router,\n              private loaderService: LoaderService ) {\n              window.HotelListComponentRef = {\n                  component: this,\n              };\n              this.loading = true;\n              \n    // this.requestService.get(\"http://country.io/names.json\", (resp: any) => {\n    this.requestService.get(\"./assets/json/country_code.json\", (resp: any) => {\n      this.country_codes = resp;\n      console.log(resp);\n    } ,(err) => {\n      this.requestService.errorHandler(err);\n    } );\n    // BASE_URL  \n    // this.requestService.get(\"./assets/json/hotel_list.json\", (resp: any) => {\n    this.requestService.get(Constants.BASE_URL + \"/hotel/booking\", (resp: any) => {\n      console.log(resp);\n      this.loading = false;\n      this.hotel_list = resp;\n    }, (err) => {\n      this.loading = false;\n      this.requestService.errorHandler(err);\n    });\n   }\n  ngOnInit() {\n  }\n  shoeHotelDetail(hotel){\n    console.log(\"Hotel Details\", hotel)\n    this.router.navigate([Constants.Hotel]);\n    localStorage.setItem(\"hotel\", JSON.stringify(hotel));\n  }\n}\n","module.exports = \"\\n<header (click)=\\\"showHotelList()\\\" >\\n    <img src=\\\"../../assets/icon/back_icon.svg\\\" />\\n    <span  > Back </span>\\n</header>\\n\\n<div [ngStyle]=\\\"{'display': loading ? 'none':'block'}\\\"  class=\\\"container container-fluid content\\\"> <!-- container centers content on large screens -->\\n  <div class=\\\"row\\\">             <!-- responsive row has 12 columns by default -->\\n    <div class=\\\"col-xs-0 col-sm-0  col-md-2 col-lg-2\\\">\\n    </div>\\n    <div class=\\\"col-xs-12 col-sm-12  col-md-8 col-lg-8\\\">      <!-- uses 12 columns on smaller than medium screens -->\\n      <div class=\\\"hotel\\\">\\n        <h2>{{hotel.name}}</h2>\\n        <div class=\\\"hotelDetail\\\">\\n            <div class=\\\"left\\\" >\\n                Categories\\n            </div>\\n            <div class=\\\"right\\\" >\\n                {{hotel.categories}}\\n            </div>\\n        </div>\\n        <div class=\\\"hotelDetail\\\">\\n            <div class=\\\"left\\\" >\\n              Address\\n            </div>\\n            <div class=\\\"right\\\" >\\n                {{hotel.address}}, {{hotel.province}}, {{hotel.postalcode}}\\n            </div>\\n        </div>\\n        <div class=\\\"hotelDetail\\\">\\n            <div class=\\\"left\\\" >\\n              City\\n            </div>\\n            <div class=\\\"right\\\" >\\n                {{hotel.city}}\\n            </div>\\n        </div>\\n        <div class=\\\"hotelDetail\\\">\\n            <div class=\\\"left\\\" >\\n              Country\\n            </div>\\n            <div class=\\\"right\\\" >\\n                {{country_codes[hotel.country]}}\\n            </div>\\n        </div>\\n        <div *ngFor=\\\"let review of reviews\\\" >\\n            <button class=\\\"accordion\\\" *ngIf=\\\"review\\\">\\n                <span>{{review.username}}</span>\\n                <span class=\\\"rating\\\" >\\n                    <img  *ngIf=\\\"review.rating >= 1\\\" src=\\\"../assets/icon/rating.png\\\" />\\n                    <img  *ngIf=\\\"review.rating >= 2\\\" src=\\\"../assets/icon/rating.png\\\" />\\n                    <img  *ngIf=\\\"review.rating >= 3\\\" src=\\\"../assets/icon/rating.png\\\" />\\n                    <img  *ngIf=\\\"review.rating >= 4\\\" src=\\\"../assets/icon/rating.png\\\" />\\n                    <img  *ngIf=\\\"review.rating >= 5\\\" src=\\\"../assets/icon/rating.png\\\" />\\n                </span>\\n            </button>\\n            <div class=\\\"panel\\\">\\n              <p>{{review.text}}</p>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"loader\\\" *ngIf=\\\"loading\\\" >\\n    <img src=\\\"../assets/icon/loader.gif\\\" />\\n</div>\\n<footer>\\n</footer>\"","module.exports = \"header {\\n  color: blue;\\n  padding-top: 1rem;\\n  margin-left: 1.5rem; }\\n  header span {\\n    font-size: 1.6rem; }\\n  .hotel {\\n  margin-bottom: 2rem;\\n  margin-left: 1.5rem;\\n  margin-right: 1.5rem;\\n  padding-right: 1rem;\\n  padding-bottom: 1rem;\\n  overflow-y: auto;\\n  height: 100%;\\n  position: relative; }\\n  .accordion {\\n  color: #444444;\\n  cursor: pointer;\\n  padding: 21px;\\n  width: 100%;\\n  border: none;\\n  text-align: left;\\n  outline: none;\\n  font-size: 18px;\\n  transition: 0.4s; }\\n  .active, .accordion:hover {\\n  background-color: #cccccc; }\\n  .accordion:after {\\n  content: '\\\\002B';\\n  color: #777777;\\n  font-weight: bold;\\n  float: right;\\n  margin-left: 5px; }\\n  .active:after {\\n  content: \\\"\\\\2212\\\"; }\\n  .panel {\\n  padding: 0 18px;\\n  background-color: white;\\n  max-height: 0;\\n  overflow: hidden;\\n  transition: max-height 0.2s ease-out; }\\n  .loader {\\n  height: 70%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-align: center;\\n  margin-top: 10rem;\\n  background: white; }\\n  .rating {\\n  margin: 0rem 0rem 0 0.5rem; }\\n  .rating img {\\n    height: 1rem;\\n    padding-top: 0.5rem; }\\n  .hotelDetail {\\n  width: 100%;\\n  padding: 1rem 0 1.5rem 0; }\\n  .hotelDetail .left {\\n    width: 25%;\\n    float: left; }\\n  .hotelDetail .right {\\n    width: 75%;\\n    float: right; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { RequestService } from \"../providers/request.service\"\nimport { Constants } from \"../providers/constant.service\"\n@Component({\n  selector: 'app-hotel',\n  templateUrl: './hotel.component.html',\n  styleUrls: ['./hotel.component.scss']\n})\nexport class HotelComponent implements OnInit {\n  public loading: boolean = false;\n  public hotel: any;\n  public reviews: any;\n  private country_codes: any;\n  constructor(private requestService: RequestService,private router: Router) { \n    this.loading  = true;\n    this.hotel = JSON.parse(localStorage.getItem(\"hotel\"));\n    console.log(\"htoel id : \", this.hotel);\n    this.requestService.get(\"./assets/json/country_code.json\", (resp: any) => {\n      this.country_codes = resp;\n      console.log(resp);\n    } ,(err) => {\n      this.requestService.errorHandler(err);\n    } );\n    // this.requestService.get(\"./assets/json/review.json\", (resp: any) => {\n    this.requestService.get(Constants.BASE_URL + \"/hotel/booking/review/\"+this.hotel.id, (resp: any) => {\n            this.reviews= resp;\n            console.log(\"review \", this.reviews)\n            this.loading = false;\n            setTimeout(()=>{\n              this.bindClickHandler();\n            })\n          }, (err) => {\n            this.loading = false;\n            this.requestService.errorHandler(err);\n          });\n  }\n  ngOnInit() { \n  }\n  private bindClickHandler(){\n    var acc = document.getElementsByClassName(\"accordion\");\n    var i;\n    for (i = 0; i < acc.length; i++) {\n      acc[i].addEventListener(\"click\", function() {\n        // console.log(\"Called\")\n        this.classList.toggle(\"active\");\n        var panel = this.nextElementSibling;\n        if (panel.style.maxHeight){\n          panel.style.maxHeight = null;\n        } else {\n          panel.style.maxHeight = panel.scrollHeight + \"px\";\n        } \n      });\n    }\n  }\n  private showHotelList(){\n    this.router.navigate([Constants.HotelList]);\n  }\n}\n","module.exports = \"<div *ngIf=\\\"show\\\" class=\\\"fullpage-grid dashboard-background\\\">\\n    <div class=\\\"loader-message-container\\\">\\n        <div text-center *ngIf=\\\"messageType == 'loader'\\\">\\n            <div class=\\\"loader-message-container\\\">{{message}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"welcome-message-container\\\">\\n        <div class=\\\"pageHeaderBlueStrike\\\" *ngIf=\\\"messageType == 'welcome'\\\">\\n            <span class=\\\"headerTxt\\\">{{message}}</span>\\n        </div>\\n    </div>\\n    <div text-center [ngClass]=\\\"(messageType =='welcome')?'image-container-bottom':'image-container-mid'\\\">\\n        <img class=\\\"loaderImg\\\" srcset=\\\"../../assets/icon/loading_white.gif, ../../assets/icon/loading_white@2x.gif 2x\\\" />\\n    </div>\\n</div>\"","module.exports = \".fullpage-grid {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 99; }\\n  .fullpage-grid ion-row {\\n    height: 100%; }\\n  .fullpage-grid ion-row ion-col {\\n      padding: 0px 14%; }\\n  .loaderImg {\\n  height: 71px;\\n  width: 74px; }\\n  .image-container-bottom {\\n  height: 100px;\\n  width: 100%;\\n  position: absolute;\\n  left: 0;\\n  bottom: 3%; }\\n  .image-container-mid {\\n  height: 100px;\\n  width: 100%;\\n  position: absolute;\\n  left: 0;\\n  bottom: 35%; }\\n  .welcome-message-container {\\n  margin-top: 70%; }\\n  .loader-message-container {\\n  height: 100px;\\n  width: 100%;\\n  position: absolute;\\n  left: 0;\\n  color: white;\\n  font-size: 1.8rem;\\n  line-height: 2.9rem;\\n  margin-top: 28%; }\\n  .headerTxt {\\n  color: white;\\n  line-height: 2.9rem; }\\n\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { Constants } from \"../../providers/constant.service\";\nimport { LoaderService } from \"../../providers/loader-service.service\";\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n  public subscription: Subscription;\n  public messageType: string;\n  public message: string;\n  public show = false;\n  constructor(private loaderService: LoaderService, private zone: NgZone) { \n  }\n  ngOnInit() {\n    this.subscription = this.loaderService.loaderState\n    .subscribe((state) => {\n        this.zone.run(() => {\n            this.show = state.show;\n            if (this.show) {\n                this.messageType = state.data.messageType;\n                this.message = state.data.message;\n            }\n        });\n    });\n  }\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class Constants  {\n    // Backend server configuration\n    public static BASE_URL = \"/epsilon-hotel-booking\";\n\n    // Network Messages\n    public static FOUR_HUNDRED_MSG: string           = \"We have encountered an issue retrieving your information. Please log out of the application and try again later.\";\n    public static FOUR_HUNDRED_MSG_OFFLINE: string   = \"We have encountered an issue retrieving your information. Please try again later.\";\n    public static NO_NETWORK_MSG: string             = \"Please check your Internet connection and try again.\";\n\n    // Pages available for navigation\n    public static HotelList: string = \"hotel-list\";\n    public static Hotel: string     = \"hotel\";\n    public static Review: string    = \"review\";\n\n    // Messages \n    public static POST_LOGIN_MESSAGE: string = \"Loading...\";\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from \"rxjs\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  public loaderSubject = new Subject<any>();\n  public loaderState = this.loaderSubject.asObservable();\n  public show(loaderData) {\n      this.loaderSubject.next({ show: true, data: loaderData });\n  }\n  public hide() {\n      this.loaderSubject.next({ show: false, data: {} });\n  }\n}\n","import { HttpModule, Http  } from \"@angular/http\";\nimport { Injectable } from '@angular/core';\nimport { Constants } from './constant.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  public defaultStatus = \"999\";\n  public errMessages = [];\n  constructor(public http: Http) {\n      this.errMessages[\"404\"] = { title: \"Error Message\", message: Constants.FOUR_HUNDRED_MSG };\n      this.errMessages[\"401\"] = { title: \"Error Message\", message: Constants.FOUR_HUNDRED_MSG };\n      this.errMessages[\"0\"]   = { title: \"No Network Available\", message: Constants.NO_NETWORK_MSG };\n      this.errMessages[\"999\"] = { title: \"Error Message\", message: Constants.FOUR_HUNDRED_MSG };\n      this.errMessages[\"998\"] = { title: \"Error Message\", message: Constants.FOUR_HUNDRED_MSG_OFFLINE };\n  }\n  public get(url, callback, errCallback?) {\n    this.http.get(url ).subscribe((resp) => {\n        if(resp && resp.status === 200){\n          callback(resp.json());\n        }\n    }, (err) => {\n        this.errorHandler(err, errCallback);\n    });\n}\npublic post(url, requestBody, callback, errCallback) {\n    this.http.post(url, requestBody).subscribe((data) => {\n        // console.log(\"POST Response Data: for URL \", url, \" :: Data :: \", data);\n        callback(data);\n    }, (err) => {\n        this.errorHandler(err, errCallback);\n    });\n}\npublic showAlertMessage(state, psubtitle?) {\n  if (psubtitle != null) {\n      this.showAlert(state, psubtitle);\n  } else {\n      if (this.errMessages[state] !== undefined) {\n          this.showAlert(this.errMessages[state].title, this.errMessages[state].message);\n      } else {\n          this.showAlert(this.errMessages[this.defaultStatus].title, this.errMessages[this.defaultStatus].message);\n      }\n  }\n}\npublic showAlert(ptitle, psubtitle, code?) {\n  // An implementation needed for opening pop up window\n  // confirm(psubtitle);\n}\npublic errorHandler(err, errCallback?) {\n  if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error(\"An error occurred:\", err.error.message);\n  } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n          `Backend returned code ${err.status}, ` +\n          `body was: ${err.error}`);\n  }\n  if (typeof (errCallback) === \"function\") {\n      errCallback({ status: err.status, message: err.statusText });\n  } else {\n      this.showAlertMessage(err.status);\n  }\n}\n}\n","module.exports = \"<p>\\n  review works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}